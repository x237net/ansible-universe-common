# plugins/filter/get.yml
# ======================
#
# Copying
# -------
#
# Copyright (c) 2023 universe.common authors and contributors.
#
# This file is part of the *universe.common* project.
#
# *universe.common* is a free software project. You can redistribute it and/or
# modify it following the terms of the MIT License.
#
# This software project is distributed *as is*, WITHOUT WARRANTY OF ANY KIND;
# including but not limited to the WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE and NONINFRINGEMENT.
#
# You should have received a copy of the MIT License along with
# *universe.common*. If not, see <http://opensource.org/licenses/MIT>.
#
DOCUMENTATION:
  name: "union_when"
  version_added: "0.1.2"
  short_description: >-
    Return a unique list of all the elements from two lists if the predicate
    is true. Otherwise, return the first list.
  description:
    - >-
      When the predicate is true, provide a unique list of all the elements of
      two lists.
    - "When the predicate is false, the input list is returned as is."
  positional: "_input, predicate, other"
  options:
    _input:
      description: "The original list to merge with."
      type: "list"
      required: true
    predicate:
      description: >-
        A boolean value to determine whether both lists must be merged.
      type: "bool"
      required: true
    other:
      description: "The other list to be merged."
      type: "list"
      required: true

EXAMPLES: |
  # value => ['a', 'b']
  value: "{{ ['a'] | union_when(True, ['b']) }}"
  # value => ['a']
  value: "{{ ['a'] | union_when(False, ['b']) }}"
  # value => ['a', 'b']
  value: "{{ ['a'] | union_when(True, ['a', 'b']) }}"

RETURN:
  _value:
    description: >-
      A unique list of all the elements from two lists when `predicate`
      is true, the first list otherwise.
    type: "list"
